.RecipieSlider {
  overflow-x: hidden;
  position: relative;
  & .Recipie-image-container {
    overflow-y: hidden;
    overflow-x: hidden;
    & .image-container {
      height: 50vh;
      & .slider-image {
        height: 100%;
      }
    }
  }
}

.no-recipies {
  background-color: rgba(255, 123, 16, 0.7);
  width: 100%;
  height: 50vh;
  display: grid;
  place-items: center;
  & p {
    color: black;
    font-weight: 500;
    font-style: italic;
  }
}

.slider-recipie-content {
  margin-top: 20px;
  padding-inline: 20px;
  display: flex;
  flex-direction: column;
  gap: 10px;
  & h2 {
    font-weight: 500;
    font-size: 20px;
  }
  & h3 {
    font-style: 16px;
  }
  & h4 {
    margin-top: 10px;
    font-size: 14px;
    font-weight: 600;
  }
}

.slick-dots {
  height: fit-content;
  height: 9px;
  padding: 10px;
  width: 50px;
  border-radius: 5px;
  top: calc(1vh) !important;
  display: flex !important;
  justify-content: space-evenly;
}

.slick-dots > * {
  display: flex !important;
  justify-content: center;
  width: 100% !important;
}

.custom-dot {
  height: 3px;
  background-color: rgba(133, 133, 133, 0.3);
  width: 100%;
  border-radius: 3px;
}

.slick-active .custom-dot {
  background-color: rgba(255, 123, 16, 0.7);
}


/* // import './RecipieSlider.css';
import { Recipie } from '../../Interfaces';
import styles from './RecipieSlider.module.css';

import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";

function RecipieSlider({ recipie }) {
  
  const customPaging = (i: number) => {
    return <div className="custom-dot" key={i}></div>;
  };

  const initialSliderSettings = {
    infinite: false,
    slidesToShow: 1,
    slidesToScroll: 1,
    autoplay: false,
    // arrows: true,
    dots: true,
    customPaging: customPaging,
  };

  return (
    <div className={styles.RecipieSlider}>
      <div className={styles['Recipie-image-container']}>
        {recipie && recipie.images && recipie.images.length > 0 ? (
          <Slider {...initialSliderSettings} className={styles.homeSlider}>
            {recipie.images
              .filter(image => image.length > 0)
              .map((image, index) => (
                <div className={styles['image-container']} key={index}>
                  <img className={styles['slider-image']} src={image} alt="" />
                </div>
              ))}
          </Slider>
        ) : (
          <div className={styles['no-recipies']}>
            <p>No more recipes available</p>
          </div>
        )}
        {recipie && (
        <div className={styles['slider-recipie-content']}>
          <h2>{recipie.title}</h2>
          <h3>{recipie.description}</h3>
          <h4>Ingredients</h4>
          <p>{recipie.ingredients}</p>
        </div>
      )}
      </div>
    </div>
  )
}

export default RecipieSlider */